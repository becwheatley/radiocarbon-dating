pvals[4,2] <- spd.singleton.ancient.50p$discrepancy
pvals[4,3] <- if(length(spd.singleton.ancient.50p$pvalue>0)){ spd.singleton.ancient.50p$pvalue }else{ "NA" }
pvals[5,1] <- "singleton.ancient.75p"
pvals[5,2] <- spd.singleton.ancient.75p$discrepancy
pvals[5,3] <- if(length(spd.singleton.ancient.75p$pvalue>0)){ spd.singleton.ancient.75p$pvalue }else{ "NA" }
pvals[6,1] <- "singleton.ancient.100p"
pvals[6,2] <- spd.singleton.ancient.100p$discrepancy
pvals[6,3] <- if(length(spd.singleton.ancient.100p$pvalue>0)){ spd.singleton.ancient.100p$pvalue }else{ "NA" }
pvals[7,1] <- "singleton.recent.50p"
pvals[7,2] <- spd.singleton.recent.50p$discrepancy
pvals[7,3] <- if(length(spd.singleton.recent.50p$pvalue>0)){ spd.singleton.recent.50p$pvalue }else{ "NA" }
pvals[8,1] <- "singleton.recent.75p"
pvals[8,2] <- spd.singleton.recent.75p$discrepancy
pvals[8,3] <- if(length(spd.singleton.recent.75p$pvalue>0)){ spd.singleton.recent.75p$pvalue }else{ "NA" }
pvals[9,1] <- "singleton.recent.100p"
pvals[9,2] <- spd.singleton.recent.100p$discrepancy
pvals[9,3] <- if(length(spd.singleton.recent.100p$pvalue>0)){ spd.singleton.recent.100p$pvalue }else{ "NA" }
pvals[10,1] <- "singleton.random.50p"
pvals[10,2] <- spd.singleton.random.50p$discrepancy
pvals[10,3] <- if(length(spd.singleton.random.50p$pvalue>0)){ spd.singleton.random.50p$pvalue }else{ "NA" }
pvals[11,1] <- "singleton.random.75p"
pvals[11,2] <- spd.singleton.random.75p$discrepancy
pvals[11,3] <- if(length(spd.singleton.random.75p$pvalue>0)){ spd.singleton.random.75p$pvalue }else{ "NA" }
pvals[12,1] <- "singleton.random.100p"
pvals[12,2] <- spd.singleton.random.100p$discrepancy
pvals[12,3] <- if(length(spd.singleton.random.100p$pvalue>0)){ spd.singleton.random.100p$pvalue }else{ "NA" }
pvals[13,1] <- "bracketed.50p"
pvals[13,2] <- spd.bracketed.50p$discrepancy
pvals[13,3] <- if(length(spd.bracketed.50p$pvalue>0)){ spd.bracketed.50p$pvalue }else{ "NA" }
pvals[14,1] <- "bracketed.75p"
pvals[14,2] <- spd.bracketed.75p$discrepancy
pvals[14,3] <- if(length(spd.bracketed.75p$pvalue>0)){ spd.bracketed.75p$pvalue }else{ "NA" }
pvals[15,1] <- "bracketed.100p"
pvals[15,2] <- spd.bracketed.100p$discrepancy
pvals[14,3] <- if(length(spd.bracketed.100p$pvalue>0)){ spd.bracketed.100p$pvalue }else{ "NA" }
write.csv(pvals, "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Results/Baseline vs subsamples/linear_pop_growth-baseline_SPD_vs_mean_subsample_SPDs-5s.csv", header = T)
write.csv(pvals, "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Results/Baseline vs subsamples/linear_pop_growth-baseline_SPD_vs_mean_subsample_SPDs-5s.csv")
# Rearrange data for plotting:
plot.spd.noloss <- data.frame(matrix(NA, nrow = length(spd.baseline.noloss$calBP)*17, ncol = 5))
names(plot.spd.noloss) <- c("sample", "years.ka", "lowerCI", "mean", "upperCI")
for (i in 1:length(spd.baseline.noloss$calBP)){
plot.spd.noloss[i,1] <- "baseline (replicates)"
plot.spd.noloss[i,2] <- spd.baseline.noloss$calBP[i]/1000
plot.spd.noloss[i,3] <- spd.baseline.noloss$envelope[[1]][i,1]
plot.spd.noloss[i,4] <- spd.baseline.noloss$envelope[[1]][i,2]
plot.spd.noloss[i,5] <- spd.baseline.noloss$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)+i),1] <- "singleton ancient (50% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)+i),2] <- spd.singleton.ancient.50p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)+i),3] <- spd.singleton.ancient.50p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)+i),4] <- spd.singleton.ancient.50p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)+i),5] <- spd.singleton.ancient.50p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*2+i),1] <- "singleton ancient (75% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*2+i),2] <- spd.singleton.ancient.75p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*2+i),3] <- spd.singleton.ancient.75p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*2+i),4] <- spd.singleton.ancient.75p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*2+i),5] <- spd.singleton.ancient.75p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*3+i),1] <- "singleton ancient (100% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*3+i),2] <- spd.singleton.ancient.100p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*3+i),3] <- spd.singleton.ancient.100p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*3+i),4] <- spd.singleton.ancient.100p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*3+i),5] <- spd.singleton.ancient.100p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*4+i),1] <- "singleton recent (50% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*4+i),2] <- spd.singleton.recent.50p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*4+i),3] <- spd.singleton.recent.50p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*4+i),4] <- spd.singleton.recent.50p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*4+i),5] <- spd.singleton.recent.50p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*5+i),1] <- "singleton recent (75% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*5+i),2] <- spd.singleton.recent.75p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*5+i),3] <- spd.singleton.recent.75p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*5+i),4] <- spd.singleton.recent.75p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*5+i),5] <- spd.singleton.recent.75p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*6+i),1] <- "singleton recent (100% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*6+i),2] <- spd.singleton.recent.100p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*6+i),3] <- spd.singleton.recent.100p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*6+i),4] <- spd.singleton.recent.100p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*6+i),5] <- spd.singleton.recent.100p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*7+i),1] <- "singleton random (50% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*7+i),2] <- spd.singleton.random.50p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*7+i),3] <- spd.singleton.random.50p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*7+i),4] <- spd.singleton.random.50p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*7+i),5] <- spd.singleton.random.50p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*8+i),1] <- "singleton random (75% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*8+i),2] <- spd.singleton.random.75p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*8+i),3] <- spd.singleton.random.75p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*8+i),4] <- spd.singleton.random.75p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*8+i),5] <- spd.singleton.random.75p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*9+i),1] <- "singleton random (100% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*9+i),2] <- spd.singleton.random.100p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*9+i),3] <- spd.singleton.random.100p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*9+i),4] <- spd.singleton.random.100p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*9+i),5] <- spd.singleton.random.100p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*10+i),1] <- "bracketed (50% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*10+i),2] <- spd.bracketed.50p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*10+i),3] <- spd.bracketed.50p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*10+i),4] <- spd.bracketed.50p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*10+i),5] <- spd.bracketed.50p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*11+i),1] <- "bracketed (75% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*11+i),2] <- spd.bracketed.75p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*11+i),3] <- spd.bracketed.75p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*11+i),4] <- spd.bracketed.75p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*11+i),5] <- spd.bracketed.75p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*12+i),1] <- "bracketed (100% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*12+i),2] <- spd.bracketed.100p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*12+i),3] <- spd.bracketed.100p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*12+i),4] <- spd.bracketed.100p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*12+i),5] <- spd.bracketed.100p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*13+i),1] <- "uniform (50% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*13+i),2] <- spd.uniform.50p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*13+i),3] <- spd.uniform.50p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*13+i),4] <- spd.uniform.50p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*13+i),5] <- spd.uniform.50p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*14+i),1] <- "uniform (75% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*14+i),2] <- spd.uniform.75p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*14+i),3] <- spd.uniform.75p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*14+i),4] <- spd.uniform.75p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*14+i),5] <- spd.uniform.75p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*15+i),1] <- "uniform (100% sites)"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*15+i),2] <- spd.uniform.100p$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*15+i),3] <- spd.uniform.100p$envelope[[1]][i,1]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*15+i),4] <- spd.uniform.100p$envelope[[1]][i,2]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*15+i),5] <- spd.uniform.100p$envelope[[1]][i,3]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*16+i),1] <- "baseline"
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*16+i),2] <- spd.baseline.noloss1$grid$calBP[i]/1000
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*16+i),3] <- 0
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*16+i),4] <- spd.baseline.noloss1$grid$PrDens[i]
plot.spd.noloss[(length(spd.baseline.noloss$calBP)*16+i),5] <- 0
}
write.csv(plot.spd.noloss, "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Analysis/Linear population growth/Plot_data-SPD-5samples_99sims.csv")
# Plot (combined):
group.colors <- c("baseline (replicates)" = "grey",
"singleton ancient (50% sites)" = "chocolate1", "singleton ancient (75% sites)" = "chocolate2", "singleton ancient (100% sites)" = "chocolate3",
"singleton recent (50% sites)"  = "cadetblue1", "singleton recent (75% sites)"  = "cadetblue2", "singleton recent (100% sites)"  = "cadetblue3",
"singleton random (50% sites)"  = "goldenrod1", "singleton random (75% sites)"  = "goldenrod2", "singleton random (100% sites)"  = "goldenrod3",
"bracketed (50% sites)"         = "chartreuse2", "bracketed (75% sites)"        = "chartreuse3", "bracketed (100% sites)"        = "chartreuse4",
"uniform (50% sites)"           = "darkorchid1", "uniform (75% sites"           = "darkorchid3", "uniform (100% sites)"          = "darkorchid4",
"baseline" = "black")
# Plot (multi panelled):
uniform <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "uniform (50% sites)", "uniform (75% sites)", "uniform (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "uniform (50% sites)", "uniform (75% sites)", "uniform (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0007) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
singleton.random <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "singleton random (50% sites)", "singleton random (75% sites)", "singleton random (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "singleton random (50% sites)", "singleton random (75% sites)", "singleton random (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
ylim(0, 0.0007) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
singleton.ancient <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "singleton ancient (50% sites)", "singleton ancient (75% sites)", "singleton ancient (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "singleton ancient (50% sites)", "singleton ancient (75% sites)", "singleton ancient (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0007) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
singleton.recent <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0007) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
bracketed <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "bracketed (50% sites)", "bracketed (75% sites)", "bracketed (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "bracketed (50% sites)", "bracketed (75% sites)", "bracketed (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0007) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
baseline <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "baseline (replicates)"),] %>%
mutate(sample = fct_relevel(sample, "baseline (replicates)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0007) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
spd.noloss <- ggarrange(uniform, singleton.random, singleton.ancient, singleton.recent, bracketed, #baseline,
labels = c("A", "B", "C", "D", "E"),
ncol = 2, nrow = 3,
common.legend = TRUE)
ggexport(spd.noloss, filename = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Linear_population_growth-baseline_SPD_vs_mean_subsamples-5samples_99sims.png",
width = 1500,
height = 1000)
singleton.recent <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.002) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
singleton.recent
singleton.recent <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.001) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
singleton.recent
singleton.recent <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0008) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
singleton.recent
singleton.recent <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.00085) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
singleton.recent
# Plot (multi panelled):
uniform <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "uniform (50% sites)", "uniform (75% sites)", "uniform (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "uniform (50% sites)", "uniform (75% sites)", "uniform (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.00085) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
singleton.random <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "singleton random (50% sites)", "singleton random (75% sites)", "singleton random (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "singleton random (50% sites)", "singleton random (75% sites)", "singleton random (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
ylim(0, 0.00085) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
singleton.ancient <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "singleton ancient (50% sites)", "singleton ancient (75% sites)", "singleton ancient (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "singleton ancient (50% sites)", "singleton ancient (75% sites)", "singleton ancient (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.00085) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
singleton.recent <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "singleton recent (50% sites)", "singleton recent (75% sites)", "singleton recent (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.00085) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
bracketed <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "bracketed (50% sites)", "bracketed (75% sites)", "bracketed (100% sites)"),] %>%
mutate(sample = fct_relevel(sample, "bracketed (50% sites)", "bracketed (75% sites)", "bracketed (100% sites)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.00085) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
baseline <- plot.spd.noloss[plot.spd.noloss$sample %in% c("baseline", "baseline (replicates)"),] %>%
mutate(sample = fct_relevel(sample, "baseline (replicates)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.00085) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
spd.noloss <- ggarrange(uniform, singleton.random, singleton.ancient, singleton.recent, bracketed, #baseline,
labels = c("A", "B", "C", "D", "E"),
ncol = 2, nrow = 3,
common.legend = TRUE)
ggexport(spd.noloss, filename = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Baseline vs subsamples/Linear_population_growth-baseline_SPD_vs_mean_subsamples-5samples_99sims.png",
width = 1500,
height = 1000)
# Save the workspace
save.image("C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Analysis/Linear population growth/linear_pop_growth-raw_sample_and_calibrated_data_plus_SPDs-5s-99sims.RData")
uniform.spd       <- read.csv("./Uniform population growth/Plot_data-SPD-5samples_99sims.csv", header = T)
library(tidyverse)
library(ggpubr)
theme_set(
theme_bw() +
theme(legend.position = "top"))
# Load plot data
setwd("C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Analysis")
uniform.spd       <- read.csv("./Uniform population growth/Plot_data-SPD-5samples_99sims.csv", header = T)
linear.spd        <- read.csv("./Linear population growth/Plot_data-SPD-5samples_99sims.csv", header = T)
exponential.spd   <- read.csv("./Exponential population growth/Plot_data-SPD-5samples_99sims.csv", header = T)
exponential.spd   <- read.csv("./Exponential population growth/Plot_data-SPD-5samples_99sims.csv", header = T)
library(tidyverse)
library(ggpubr)
theme_set(
theme_bw() +
theme(legend.position = "top"))
# Load plot data
setwd("C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Analysis")
uniform.spd       <- read.csv("./Uniform population growth/Plot_data-SPD-5samples_99sims.csv", header = T)
linear.spd        <- read.csv("./Linear population growth/Plot_data-SPD-5samples_99sims.csv", header = T)
exponential.spd   <- read.csv("./Exponential population growth/Plot_data-SPD-5samples_99sims.csv", header = T)
# Plot (SPD no loss for all population trends)
group.colors <- c("baseline (replicates)" = "grey", "baseline" = "black")
View(exponential.spd)
View(linear.spd)
View(uniform.spd)
# Plot (SPD no loss for all population trends)
group.colors <- c("baseline (replicates)" = "grey", "baseline" = "black")
uniform <- uniform.spd[uniform.spd$sample %in% c("baseline", "baseline (replicates)"),] %>%
mutate(sample = fct_relevel(sample, "baseline (replicates)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = median, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0008) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
linear <- linear.spd[linear.spd$sample %in% c("baseline", "baseline (replicates)"),] %>%
mutate(sample = fct_relevel(sample, "baseline (replicates)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = median, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0008) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
exponential <- exponential.spd[exponential.spd$sample %in% c("baseline", "baseline (replicates)"),] %>%
mutate(sample = fct_relevel(sample, "baseline (replicates)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = median, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0008) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
spd <- ggarrange(uniform, linear, exponential,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
uniform <- uniform.spd[uniform.spd$sample %in% c("baseline", "baseline (replicates)"),] %>%
mutate(sample = fct_relevel(sample, "baseline (replicates)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0008) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
linear <- linear.spd[linear.spd$sample %in% c("baseline", "baseline (replicates)"),] %>%
mutate(sample = fct_relevel(sample, "baseline (replicates)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0008) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
exponential <- exponential.spd[exponential.spd$sample %in% c("baseline", "baseline (replicates)"),] %>%
mutate(sample = fct_relevel(sample, "baseline (replicates)", "baseline")) %>%
ggplot() +
geom_ribbon(aes(x = years.ka, ymin = lowerCI, ymax = upperCI, fill = sample), alpha = 0.2) +
geom_line(aes(x = years.ka, y = mean, color = sample), lwd = 1.5) +
scale_fill_manual(values=group.colors) +
scale_color_manual(values=group.colors) +
labs(x = "Years (ka)", y = "Probability") +
ylim(0, 0.0008) +
scale_x_reverse(breaks = seq(12200/1000, 200/1000, by = -6000/1000), limits = c(12200/1000, 200/1000))
spd <- ggarrange(uniform, linear, exponential,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
spd.noloss
spd
ggexport(spd, filename = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Population_trends-SPD-5samples_99sims.png",
width = 1500,
height = 1000)
spd <- ggarrange(uniform, linear, exponential,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3,
common.legend = TRUE)
spd
spd <- ggarrange(uniform, linear, exponential,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3,
common.legend = TRUE)
spd
ggexport(spd, filename = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Population_trends-SPD-5samples_99sims.png",
width = 700,
height = 1500)
ggexport(spd, filename = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Population_trends-SPD-5samples_99sims.png",
width = 700,
height = 1200)
# Clear workspace
rm(list = ls())
# Load R packages required
library(rcarbon)
library(ggformula)
library(extraDistr)
library(EnvStats)
library(truncdist)
library(data.table)
library(tidyverse)
library(ggpubr)
theme_set(
theme_bw() +
theme(legend.position = "top"))
# Load saved sample and calibrated sample data
load("C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Analysis/Uniform population growth/uniform_pop_growth-raw_sample_and_calibrated_data-5s-99sims.RData")
# Load source functions
source("C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Analysis/simulation_study-source3.R")
# Number of Monte-Carlo simulations to run per test
nsim = 499
# The running mean to use for the SPDs
runm = 100
# Uniform sampling @ 50% sites
uniform.50p.vs.linear <- modelTest(cal.uniform.50p[[1]], errors = sample.uniform.50p[[1]]$error, nsim = nsim, timeRange = timeRange,
model = "linear", runm = runm, raw = TRUE)
## calculate p-values and discrepancy scores
uniform.50p.vs.linear.p_values <- calculate_p_value(uniform.50p.vs.linear, "linear")
## calculate p-values and discrepancy scores
uniform.50p.vs.linear.p_values <- calculate_p_value(uniform.50p.vs.linear,  sample_type = "uniform (50% sites)", replicate = 1, theoretical_model = "linear")
ggsave(uniform.50p.vs.linear.p_values$plot2,
file = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Subsamples vs theoretical growth models/uniform_50p_vs_linear-5s.png")
# Uniform sampling @ 50% sites
uniform.50p.vs.uniform <- modelTest(cal.uniform.50p[[1]], errors = sample.uniform.50p[[1]]$error, nsim = nsim, timeRange = timeRange,
model = "uniform", runm = runm, raw = TRUE)
## calculate p-values and discrepancy scores
uniform.50p.vs.uniform.p_values <- calculate_p_value(uniform.50p.vs.uniform,  sample_type = "uniform (50% sites)", replicate = 1, theoretical_model = "uniform")
ggsave(uniform.50p.vs.uniform.p_values$plot2,
file = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Subsamples vs theoretical growth models/uniform_50p_vs_uniform-5s.png")
# Uniform sampling @ 50% sites
uniform.50p.vs.exponential <- modelTest(cal.uniform.50p[[1]], errors = sample.uniform.50p[[1]]$error, nsim = nsim, timeRange = timeRange,
model = "exponential", runm = runm, raw = TRUE)
## calculate p-values and discrepancy scores
uniform.50p.vs.exponential.p_values <- calculate_p_value(uniform.50p.vs.exponential,  sample_type = "uniform (50% sites)", replicate = 1, theoretical_model = "exponential")
ggsave(uniform.50p.vs.exponential.p_values$plot2,
file = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Subsamples vs theoretical growth models/uniform_50p_vs_exponential-5s.png")
# Uniform sampling @ 50% sites
ancient.50p.vs.uniform <- modelTest(cal.singleton.ancient.50p[[1]], errors = sample.singleton.ancient.50p[[1]]$error, nsim = nsim, timeRange = timeRange,
model = "uniform", runm = runm, raw = TRUE)
## calculate p-values and discrepancy scores
ancient.50p.vs.uniform.p_values <- calculate_p_value(ancient.50p.vs.uniform,  sample_type = "singleton ancient (50% sites)", replicate = 1, theoretical_model = "uniform")
ggsave(ancient.50p.vs.uniform.p_values$plot2,
file = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Subsamples vs theoretical growth models/ancient_50p_vs_uniform-5s.png")
# Uniform sampling @ 50% sites
ancient.50p.vs.linear <- modelTest(cal.singleton.ancient.50p[[1]], errors = sample.singleton.ancient.50p[[1]]$error, nsim = nsim, timeRange = timeRange,
model = "linear", runm = runm, raw = TRUE)
# Uniform sampling @ 50% sites
ancient.50p.vs.linear <- modelTest(cal.singleton.ancient.50p[[1]], errors = sample.singleton.ancient.50p[[1]]$error, nsim = nsim, timeRange = timeRange,
model = "linear", runm = runm, raw = TRUE)
## calculate p-values and discrepancy scores
ancient.50p.vs.linear.p_values <- calculate_p_value(ancient.50p.vs.linear,  sample_type = "singleton ancient (50% sites)", replicate = 1, theoretical_model = "linear")
ggsave(ancient.50p.vs.linear.p_values$plot2,
file = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Subsamples vs theoretical growth models/ancient_50p_vs_linear-5s.png")
# Uniform sampling @ 50% sites
ancient.50p.vs.exponential <- modelTest(cal.singleton.ancient.50p[[1]], errors = sample.singleton.ancient.50p[[1]]$error, nsim = nsim, timeRange = timeRange,
model = "exponential", runm = runm, raw = TRUE)
## calculate p-values and discrepancy scores
ancient.50p.vs.exponential.p_values <- calculate_p_value(ancient.50p.vs.exponential,  sample_type = "singleton ancient (50% sites)", replicate = 1, theoretical_model = "exponential")
ggsave(ancient.50p.vs.exponential.p_values$plot2,
file = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/Subsamples vs theoretical growth models/ancient_50p_vs_exponential-5s.png")
figure <- ggarrange(uniform.50p.vs.uniform.p_values$plot2, uniform.50p.vs.linear.p_values$plot2, uniform.50p.vs.exponential.p_values$plot2,
ancient.50p.vs.uniform.p_values$plot2, ancient.50p.vs.linear.p_values$plot2, ancient.50p.vs.exponential.p_values$plot2,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 3, nrow = 2,
common.legend = TRUE)
figure
ggexport(figure, filename = "C:/Users/Bec/Work/Projects/Radiocarbon dating/GitHub/Figures/example.png",
width = 1500,
height = 1000)
